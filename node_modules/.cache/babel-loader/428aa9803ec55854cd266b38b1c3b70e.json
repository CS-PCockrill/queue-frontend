{"ast":null,"code":"var _jsxFileName = \"/Users/patcockrill/queue-frontend/src/layouts/DashboardLayout/NavBar/NavItem.js\";\nimport React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Button, ListItem, makeStyles, Hidden } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  item: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    color: '#000',\n    fontFamily: 'Poppins, sans-serif',\n    fontWeight: 'normal',\n    textTransform: 'capitalize',\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    fontSize: 15,\n    padding: 5,\n    width: '100%'\n  },\n  icon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  },\n  heading: {\n    textTransform: 'uppercase',\n    letterSpacing: 2.5,\n    fontSize: 16,\n    fontWeight: 500\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    whiteSpace: 'nowrap'\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  iconButton,\n  ...rest\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(ListItem, Object.assign({\n    className: clsx(classes.item, className),\n    disableGutters: true\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: clsx(classes.button, href === '#' ? classes.heading : null),\n    component: RouterLink,\n    to: href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    className: classes.icon,\n    size: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Hidden, {\n    mdDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, title)), /*#__PURE__*/React.createElement(Hidden, {\n    lgUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, iconButton ? null : /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, title))));\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\nexport default NavItem;","map":{"version":3,"sources":["/Users/patcockrill/queue-frontend/src/layouts/DashboardLayout/NavBar/NavItem.js"],"names":["React","NavLink","RouterLink","clsx","PropTypes","Button","ListItem","makeStyles","Hidden","useStyles","theme","item","display","alignItems","justifyContent","button","color","fontFamily","fontWeight","textTransform","letterSpacing","fontSize","padding","width","icon","marginLeft","spacing","marginRight","heading","title","whiteSpace","NavItem","className","href","Icon","iconButton","rest","classes","propTypes","string","elementType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  makeStyles,\r\n  Hidden\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  button: {\r\n    color: '#000',\r\n    fontFamily: 'Poppins, sans-serif',\r\n    fontWeight: 'normal',\r\n    textTransform: 'capitalize',\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    fontSize: 15,\r\n    padding: 5,\r\n    width: '100%',\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  heading: {\r\n    textTransform: 'uppercase',\r\n    letterSpacing: 2.5,\r\n    fontSize: 16,\r\n    fontWeight: 500\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    whiteSpace: 'nowrap',\r\n  },\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  iconButton,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        className={clsx(classes.button, href === '#' ? classes.heading : null)}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon\r\n            className={classes.icon}\r\n            size=\"20\"\r\n          />\r\n        )}\r\n        <Hidden mdDown>\r\n          <span className={classes.title}>\r\n            {title}\r\n          </span>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          {iconButton ? null : (\r\n            <span className={classes.title}>\r\n              {title}\r\n            </span>\r\n          )}\r\n        </Hidden>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n"]},"metadata":{},"sourceType":"module"}