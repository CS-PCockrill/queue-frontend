{"ast":null,"code":"var _jsxFileName = \"/Users/patcockrill/queue-frontend/src/layouts/DashboardLayout/NavBar/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink // useLocation\n} from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Drawer, Hidden, List, makeStyles } from '@material-ui/core';\nimport { List as InventoryIcon, Home as HomeIcon, TrendingUp as TrendsIcon, Send as OrderIcon, User as UserIcon, Users as CustomerIcon, Settings as SettingsIcon, Sliders as OptionIcon, BarChart as ChartIcon, Menu as SideBarIcon } from 'react-feather';\nimport NavItem from './NavItem';\nconst items = [{\n  href: '#',\n  title: 'admin'\n}, {\n  href: '/dashboard/profile',\n  icon: HomeIcon,\n  title: 'profile'\n}, // {\n//   href: '/dashboard/users',\n//   icon: UserIcon,\n//   title: 'users'\n// },\n// {\n//   href: '/dashboard/trends',\n//   icon: TrendsIcon,\n//   title: 'trends'\n// },\n{\n  href: '/dashboard/orders',\n  icon: OrderIcon,\n  title: 'orders'\n}, {\n  href: '/dashboard/customers',\n  icon: CustomerIcon,\n  title: 'customers'\n}, {\n  href: '/dashboard/inventory',\n  icon: InventoryIcon,\n  title: 'inventory'\n}, {\n  href: '#',\n  title: 'settings'\n}, {\n  href: '/dashboard/settings',\n  icon: SettingsIcon,\n  title: 'settings'\n}, {\n  href: '/dashboard/options',\n  icon: OptionIcon,\n  title: 'options'\n}, {\n  href: '/dashboard/charts',\n  icon: ChartIcon,\n  title: 'charts'\n}];\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    top: \"3.5rem\",\n    backgroundColor: '#fff',\n    height: 'calc(100% - 50px)'\n  },\n  drawerOpen: {\n    width: 200\n  },\n  drawerClose: {\n    width: theme.spacing(7) + 1\n  }\n}));\n\nconst NavBar = ({\n  onMobileClose,\n  openMobile,\n  collapseSideBar\n}) => {\n  const classes = useStyles();\n  const [iconBtn, setIconBtn] = useState(true);\n  useEffect(() => {\n    collapseSideBar(iconBtn);\n  }, [iconBtn]);\n  const content = /*#__PURE__*/React.createElement(Box, {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    lgUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setIconBtn(!iconBtn),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideBarIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, items.map((item, i) => /*#__PURE__*/React.createElement(NavItem, {\n    href: item.href,\n    key: i,\n    title: item.title,\n    icon: item.icon,\n    iconButton: iconBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"left\",\n    classes: {\n      paper: classes.drawer\n    },\n    open: openMobile,\n    variant: \"persistent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, content);\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\nexport default NavBar;","map":{"version":3,"sources":["/Users/patcockrill/queue-frontend/src/layouts/DashboardLayout/NavBar/index.js"],"names":["React","useState","useEffect","Link","RouterLink","clsx","PropTypes","Box","Button","Drawer","Hidden","List","makeStyles","InventoryIcon","Home","HomeIcon","TrendingUp","TrendsIcon","Send","OrderIcon","User","UserIcon","Users","CustomerIcon","Settings","SettingsIcon","Sliders","OptionIcon","BarChart","ChartIcon","Menu","SideBarIcon","NavItem","items","href","title","icon","useStyles","theme","drawer","top","backgroundColor","height","drawerOpen","width","drawerClose","spacing","NavBar","onMobileClose","openMobile","collapseSideBar","classes","iconBtn","setIconBtn","content","map","item","i","paper","propTypes","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  useEffect\r\n} from 'react';\r\nimport {\r\n  Link as RouterLink,\r\n  // useLocation\r\n} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  List as InventoryIcon,\r\n  Home as HomeIcon,\r\n  TrendingUp as TrendsIcon,\r\n  Send as OrderIcon,\r\n  User as UserIcon,\r\n  Users as CustomerIcon,\r\n  Settings as SettingsIcon,\r\n  Sliders as OptionIcon,\r\n  BarChart as ChartIcon,\r\n  Menu as SideBarIcon\r\n} from 'react-feather';\r\n\r\nimport NavItem from './NavItem';\r\n\r\nconst items = [\r\n  {\r\n    href: '#',\r\n    title: 'admin'\r\n  },\r\n  {\r\n    href: '/dashboard/profile',\r\n    icon: HomeIcon,\r\n    title: 'profile'\r\n  },\r\n  // {\r\n  //   href: '/dashboard/users',\r\n  //   icon: UserIcon,\r\n  //   title: 'users'\r\n  // },\r\n  // {\r\n  //   href: '/dashboard/trends',\r\n  //   icon: TrendsIcon,\r\n  //   title: 'trends'\r\n  // },\r\n  {\r\n    href: '/dashboard/orders',\r\n    icon: OrderIcon,\r\n    title: 'orders'\r\n  },\r\n  {\r\n    href: '/dashboard/customers',\r\n    icon: CustomerIcon,\r\n    title: 'customers'\r\n  },\r\n  {\r\n    href: '/dashboard/inventory',\r\n    icon: InventoryIcon,\r\n    title: 'inventory'\r\n  },\r\n  {\r\n    href: '#',\r\n    title: 'settings'\r\n  },\r\n  {\r\n    href: '/dashboard/settings',\r\n    icon: SettingsIcon,\r\n    title: 'settings'\r\n  },\r\n  {\r\n    href: '/dashboard/options',\r\n    icon: OptionIcon,\r\n    title: 'options'\r\n  },\r\n  {\r\n    href: '/dashboard/charts',\r\n    icon: ChartIcon,\r\n    title: 'charts'\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    top: \"3.5rem\",\r\n    backgroundColor: '#fff',\r\n    height: 'calc(100% - 50px)'\r\n  },\r\n  drawerOpen: {\r\n    width: 200\r\n  },\r\n  drawerClose: {\r\n    width: theme.spacing(7) + 1\r\n  }\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile, collapseSideBar }) => {\r\n  const classes = useStyles();\r\n  const [iconBtn, setIconBtn] = useState(true)\r\n\r\n  useEffect(() => {\r\n    collapseSideBar(iconBtn)\r\n  }, [iconBtn])\r\n\r\n  const content = (\r\n    <Box\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Hidden lgUp>\r\n        <Button onClick={() => setIconBtn(!iconBtn)}>\r\n          <SideBarIcon />\r\n        </Button>\r\n      </Hidden>\r\n      <Box>\r\n        <List>\r\n          {items.map((item, i) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={i}\r\n              title={item.title}\r\n              icon={item.icon}\r\n              iconButton={iconBtn}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      classes={{ paper: classes.drawer }}\r\n      open={openMobile}\r\n      variant=\"persistent\"\r\n    >\r\n      {content}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}